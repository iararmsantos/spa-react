{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iara.santos\\\\Desktop\\\\Courses\\\\ReactUdemyMax\\\\react-full-course\\\\21_React_Router\\\\ProjectB\\\\frontend\\\\src\\\\App.js\";\nimport { createBrowserRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./pages/RootLayout\";\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EventDetail from \"./pages/EventDetail\";\nimport NewEventDetail from \"./pages/NewEventDetail\";\nimport EditEvent from \"./pages/EditEvent\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// this is one way:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routeDefinitions = createRoutesFromElements(/*#__PURE__*/_jsxDEV(Route, {\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/products\",\n    element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this));\nconst router = createBrowserRouter(routeDefinitions);\n\n// const router = createBrowserRouter({\n//   path: \"/\",\n//   element: <RootLayout />,\n//   children: [\n//     { index: true, path: \"\", element: <Home /> },\n//     { path: \"/events\", element: <Events /> },\n//     { path: \"/events/:eventId\", element: <EventDetail /> },\n//     { path: \"/events/new\", element: <NewEventDetail /> },\n//     { path: \"/events/:eventId/edit\", element: <EditEvent /> },\n//   ],\n// });\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","createRoutesFromElements","Route","RouterProvider","RootLayout","Home","Events","EventDetail","NewEventDetail","EditEvent","jsxDEV","_jsxDEV","routeDefinitions","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","router","App","_c","$RefreshReg$"],"sources":["C:/Users/iara.santos/Desktop/Courses/ReactUdemyMax/react-full-course/21_React_Router/ProjectB/frontend/src/App.js"],"sourcesContent":["import {\n  createBrowserRouter,\n  createRoutesFromElements,\n  Route,\n  RouterProvider,\n} from \"react-router-dom\";\nimport RootLayout from \"./pages/RootLayout\";\nimport Home from \"./pages/Home\";\nimport Events from \"./pages/Events\";\nimport EventDetail from \"./pages/EventDetail\";\nimport NewEventDetail from \"./pages/NewEventDetail\";\nimport EditEvent from \"./pages/EditEvent\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// this is one way:\nconst routeDefinitions = createRoutesFromElements(\n  <Route>\n    <Route path=\"/\" element={<Home />} />\n    <Route path=\"/products\" element={<Events />} />\n  </Route>\n);\n\nconst router = createBrowserRouter(routeDefinitions);\n\n// const router = createBrowserRouter({\n//   path: \"/\",\n//   element: <RootLayout />,\n//   children: [\n//     { index: true, path: \"\", element: <Home /> },\n//     { path: \"/events\", element: <Events /> },\n//     { path: \"/events/:eventId\", element: <EventDetail /> },\n//     { path: \"/events/new\", element: <NewEventDetail /> },\n//     { path: \"/events/:eventId/edit\", element: <EditEvent /> },\n//   ],\n// });\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA,SACEA,mBAAmB,EACnBC,wBAAwB,EACxBC,KAAK,EACLC,cAAc,QACT,kBAAkB;AACzB,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,SAAS,MAAM,mBAAmB;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGX,wBAAwB,cAC/CU,OAAA,CAACT,KAAK;EAAAW,QAAA,gBACJF,OAAA,CAACT,KAAK;IAACY,IAAI,EAAC,GAAG;IAACC,OAAO,eAAEJ,OAAA,CAACN,IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACrCR,OAAA,CAACT,KAAK;IAACY,IAAI,EAAC,WAAW;IAACC,OAAO,eAAEJ,OAAA,CAACL,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC1C,CACT,CAAC;AAED,MAAMC,MAAM,GAAGpB,mBAAmB,CAACY,gBAAgB,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA,CAACR,cAAc;IAACiB,MAAM,EAAEA;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACG,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}